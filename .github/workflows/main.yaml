# name: network-security-workflow

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
#     paths-ignore:
#       - "README.md"

# jobs:
#   integration:
#     name: Continuous Integration
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Lint Code
#         run: echo "Linting repository"

#       - name: Run tests
#         run: echo "Running tests"

#   build-and-push-ecr-image:
#     name: Continuous Delivery
#     needs: integration
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Install Utilities
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y jq unzip

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Login to AWS ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag and push image to Amazon Public ECR
#         id: build-image
#         env:
#           PUBLIC_ECR_REGISTRY: ${{ secrets.AWS_PUBLIC_ECR_REGISTRY }}
#           ECR_ACCOUNT_ALIAS: ${{ secrets.ECR_ACCOUNT_ALIAS }}
#           ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
#           IMAGE_TAG: latest
#         run: |
#           # Authenticate to Amazon Public ECR
#           aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} | \
#           docker login --username AWS --password-stdin $PUBLIC_ECR_REGISTRY

#           # Build the Docker image
#           docker build -t public.ecr.aws.$ECR_ACCOUNT_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG .

#           # Push the Docker image to Public ECR
#           docker push public.ecr.aws.$ECR_ACCOUNT_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG

#           # Output the pushed image URL
#           echo "::set-output name=image::$PUBLIC_ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

name: network-security-workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - "README.md"

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Lint Code
        run: echo "Linting repository"

      - name: Run tests
        run: echo "Running tests"

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Log environment variables
        run: |
          echo "PUBLIC_ECR_REGISTRY: $PUBLIC_ECR_REGISTRY"
          echo "ECR_ACCOUNT_ALIAS: $ECR_ACCOUNT_ALIAS"
          echo "ECR_REPOSITORY: $ECR_REPOSITORY"

      - name: Build, tag and push image to Amazon Public ECR
        id: build-image
        env:
          PUBLIC_ECR_REGISTRY: ${{ secrets.AWS_PUBLIC_ECR_REGISTRY }}
          ECR_ACCOUNT_ALIAS: ${{ secrets.ECR_ACCOUNT_ALIAS }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          # Authenticate to Amazon Public ECR
          aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin $PUBLIC_ECR_REGISTRY

          # Build the Docker image
          docker build -t public.ecr.aws.$ECR_ACCOUNT_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG .

          # Retry pushing the Docker image to Public ECR
          retries=5
          for i in $(seq 1 $retries); do
            docker push public.ecr.aws.$ECR_ACCOUNT_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG && break
            if [ $i -lt $retries ]; then
              echo "Retrying push... attempt $i"
              sleep 10
            else
              echo "Docker push failed after $retries attempts"
              exit 1
            fi
          done

          # Output the pushed image URL
          echo "image=public.ecr.aws.$ECR_ACCOUNT_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
